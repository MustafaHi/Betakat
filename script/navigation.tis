function Navigate(to) {
    $(section:current)?.current(false);
    $(section({to}))?.current();

    $(section({to}) :focusable).focus();
}

event ~keydown $(deck:focus)(e) {
    switch (e.keyCode) {
        case Event.VK_RIGHT:
            this.next?.focus();
        break;
        case Event.VK_LEFT:
            this.prior?.focus();
        break;
        case Event.VK_UP:
            $$(deck)[this.index-4]?.focus();
        break;
        case Event.VK_DOWN:
            $$(deck)[this.index+4]?.focus();
        break;
    }

    if (e.keyCode == Event.VK_ENTER || e.keyCode == Event.VK_Q) {
        if (this.id) { Navigate("addDeck"); return false; }
        var title = this.$(p).text;
        setTitle(title);

        DB.Q.questions(title);
        if (e.keyCode == Event.VK_ENTER) Navigate("query");
    }
}

event keydown $(.question) {
    
}

event keydown $(section(addDeck))(e) {
    switch (e.keyCode) {
        case Event.VK_UP:
            $(#iAddDeck).focus();
        break;
        case Event.VK_DOWN:
            $(#bAddDeck).focus();
        break;
    }

    if (e.keyCode == Event.VK_ENTER) {
        if ($(#iAddDeck).value.length < 1) { return false; }
        setTitle($(#iAddDeck).value);
        Navigate("addQuestion");
    }
}

self << event keydown(e) {
    if( e.type != Event.KEY_DOWN ) return;
    if (e.shortcutKey) {
        switch (e.keyCode) {
            case Event.VK_D:
                Navigate("decksList");
            break;
            case Event.VK_ESCAPE:
                Navigate("decksList");
            break;
            case Event.VK_Q:
                DB.Q.show();
                Navigate("questionsList");
            break;
            case Event.VK_O:
                Navigate("options");
            break;
            case Event.VK_N:
                if ($(section:current).@#name == "decksList") Navigate("addDeck");
                else if ($(section:current).@#name == "questionsList") Navigate("addQuestion");
            break;
            case Event.VK_R:
                remove($(:focus).@#tag);
            break;
        }
    }
}

event dblclick $(deck) {
    if (this.id) { Navigate("addDeck"); return false; }
    var title = this.$(p).text;
    $(#title).text = "Betaka | " + title;

    DB.Q.questions(title);
    Navigate("query");
}
event click $(#bDecksList) {
    Navigate("decksList");
}

event click $(#bNewDeck) {
    Navigate("addDeck");
}

event click $(#bAddQuestion) {
    const Q = $(#iAddQuestion);
    const A = $(#iAddAnswer);
    if (Q.value.length > 0 && A.value.length > 0) {
        DB.Q.add(Q.value, A.value);

        Q.value = "";
        A.value = "";

        this.text = "ADDED!";
        this.@.addClass("added");

        Q.focus();

        this.timer(1s, () => {
            this.text = "ADD";
            this.@.removeClass("added");
        });
    }
}