include "views/addDeck.tis";
include "views/decks.tis";

include "views/addQuestion.tis";
include "views/questions.tis";
include "views/ask.tis";


namespace Nav {

    namespace decks {
        // functions:
        // - list      // decks.tis
        // - add|edit  // addDeck.tis
    }

    namespace questions {
        // functions:
        // - list      // questions.tis
        // - add|edit  // addQuestion.tis
        // - ask       // ask.tis
    }

    function options() {
        Content.$content(
            <div #form style="behavior: form;">
                <button|checkbox(letters)>Normalize letters</button>
                <button|checkbox(random)>Randomize questions</button>
            </div>
            <p style="margin-top: *; line-height: 1.5em">
                <a href="https://github.com/MustafaHi/Betakat" style="color: white;">Betakat v1.0
                <br/>
                https://github.com/MustafaHi/Betakat
                </a>
            </p>
            <footer>
                <kbd>CTRL</kbd>
                <kbd>+</kbd>
                <kbd click=D><b>D</b>ecks</kbd>
            </footer>
        );
        Content[0].value = DB.data.options;
        Content[0][0].focus();
        
        // Events:
        eventsOff();
        self << event ~keydown(e) {
            if (e.shortcutKey) {
                globalKeyBind(e);
            }
            switch (e.keyCode) {
                case Event.VK_UP:
                    Content.$(:focus)?.prior.focus();
                break;
                case Event.VK_DOWN:
                    Content.$(:focus)?.next.focus();
                break;
            }
        }
        self.on("change",  "#form", function() { DB.data.options = this.value; DB.save(); });
        self.on("click", "[click]", function() {
            self.sendKeyEvent({type: Event.KEY_DOWN, keyCode: eval("Event.VK_"+this.@#click), shortcutKey: true});
        });
    }

}


function globalKeyBind(e) {
    switch (e.keyCode) {
        case Event.VK_D:
            Nav.decks.list();
        break;
        case Event.VK_O:
            Nav.options();
        break;
    }
}

function eventsOff() {
    self.off("~keydown");
    self.off("dblclick");
    self.off("change");
    self.off("click");
}